// <auto-generated />
using System;
using FreelancersDal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FreelancersDal.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20240202173227_AlterDatabaseUserID")]
    partial class AlterDatabaseUserID
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FreelancersDal.Model.TblUser", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.ToTable("user");
                });

            modelBuilder.Entity("FreelancersDal.Model.TblUserHobby", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("Hobby")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("ModifiedDate");

                    b.Property<long>("UserId")
                        .HasColumnType("BIGINT(20)");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("user_hobbies");
                });

            modelBuilder.Entity("FreelancersDal.Model.TblUserSkillSet", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT(20)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CreateBy");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("CreateDate");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ModifiedBy");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("ModifiedDate");

                    b.Property<string>("Proficieny")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<long>("UserId")
                        .HasColumnType("BIGINT(20)");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("user_skillsets");
                });

            modelBuilder.Entity("FreelancersDal.Model.TblUserHobby", b =>
                {
                    b.HasOne("FreelancersDal.Model.TblUser", "TblUsers")
                        .WithMany("TblUserHobbies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("FreelancersDal.Model.TblUserSkillSet", b =>
                {
                    b.HasOne("FreelancersDal.Model.TblUser", "TblUsers")
                        .WithMany("TblUserSkillSets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TblUsers");
                });

            modelBuilder.Entity("FreelancersDal.Model.TblUser", b =>
                {
                    b.Navigation("TblUserHobbies");

                    b.Navigation("TblUserSkillSets");
                });
#pragma warning restore 612, 618
        }
    }
}
